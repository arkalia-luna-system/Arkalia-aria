name: ARKALIA ARIA CI/CD
'on':
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
    - develop
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.10'
        - '3.11'
        - '3.12'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run tests
      run: pytest tests/ --cov=. --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install black ruff mypy bandit safety
    - name: Run Black
      run: black --check .
    - name: Run Ruff
      run: ruff check .
    - name: Run MyPy
      run: mypy .
    - name: Run Bandit
      run: bandit -r . -f json -o bandit-report.json
    - name: Run Safety
      run: safety check --json --output safety-report.json
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run security scan
      run: python -m devops_automation.security.aria_security_validator
  build:
    runs-on: ubuntu-latest
    needs:
    - test
    - lint
    - security
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      run: docker build -t arkalia-aria:${{ github.sha }} .
    - name: Push to registry
      run: docker push arkalia-aria:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs:
    - build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to production
      run: echo 'Deploying to production...'
