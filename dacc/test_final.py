#!/usr/bin/env python3
"""
Test final ultra-l√©ger pour ARIA
===============================

Test minimal pour v√©rifier que les syst√®mes int√©gr√©s fonctionnent.
"""

import sys
from pathlib import Path

# Ajouter le r√©pertoire courant au Python path
sys.path.insert(0, str(Path(__file__).parent))


def test_imports():
    """Test des imports principaux."""
    print("üîç Test des imports...")

    try:
        # Test import m√©triques

        print("‚úÖ M√©triques: OK")

        # Test import DevOps

        print("‚úÖ DevOps: OK")

        # Test import principal

        print("‚úÖ App principale: OK")

        return True
    except Exception as e:
        print(f"‚ùå Erreur import: {e}")
        return False


def test_basic_functionality():
    """Test de fonctionnalit√© de base."""
    print("\nüöÄ Test fonctionnalit√© de base...")

    try:
        # Test validateur de s√©curit√©
        from devops_automation.security.aria_security_validator import (
            ARIA_SecurityValidator,
        )

        validator = ARIA_SecurityValidator()
        is_valid, _, _ = validator.validate_command(["ls"], "test")
        print(f"‚úÖ S√©curit√©: {'OK' if is_valid else 'ERREUR'}")

        # Test collecteur de m√©triques
        from metrics_collector.collectors.aria_metrics_collector import (
            ARIA_MetricsCollector,
        )

        collector = ARIA_MetricsCollector(".")
        metrics = collector.collect_all_metrics()
        print(f"‚úÖ M√©triques: {len(metrics)} sections collect√©es")

        return True
    except Exception as e:
        print(f"‚ùå Erreur fonctionnalit√©: {e}")
        return False


def main():
    """Test final."""
    print("üöÄ ARKALIA ARIA - Test Final Ultra-L√©ger")
    print("=" * 50)

    success = True

    # Test imports
    if not test_imports():
        success = False

    # Test fonctionnalit√©
    if not test_basic_functionality():
        success = False

    # R√©sultat
    print("\n" + "=" * 50)
    if success:
        print("üéâ TOUS LES TESTS R√âUSSIS !")
        print("‚úÖ ARIA est pr√™t et op√©rationnel")
    else:
        print("‚ùå CERTAINS TESTS ONT √âCHOU√â")
        print("‚ö†Ô∏è V√©rifiez les erreurs ci-dessus")

    return 0 if success else 1


if __name__ == "__main__":
    sys.exit(main())
